"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var router_1 = require("nativescript-angular/router");
var login_component_1 = require("./auth/login/login.component");
var main_page_component_1 = require("./main-page/main-page.component");
var auth_guard_service_1 = require("./auth/authguard/auth-guard-service");
var setting_component_1 = require("./core/settings/setting/setting.component");
exports.routes = [
    { path: "", redirectTo: "/login", pathMatch: "full" },
    { path: "login", component: login_component_1.LoginComponent },
    { path: "setting", component: setting_component_1.SettingComponent },
    { path: "saleslist", canActivate: [auth_guard_service_1.AuthguardService],
        loadChildren: "./salesorder/salesorder.module#SalesorderModule" },
    { path: "master", canActivate: [auth_guard_service_1.AuthguardService],
        loadChildren: "./item-master/item-master.module#ItemMasterModule" },
    { path: "daily", canActivate: [auth_guard_service_1.AuthguardService],
        loadChildren: "./production/production.module#ProductionModule" },
    //{ path: "daily",canActivate: [AuthguardService],component:ItemMasterComponent},
    { path: "grn", canActivate: [auth_guard_service_1.AuthguardService],
        loadChildren: "./good-receipt/good-receipt.module#GoodReciptModule" },
    { path: "main", component: main_page_component_1.MainPageComponent, canActivate: [auth_guard_service_1.AuthguardService] }
];
exports.routing = router_1.NativeScriptRouterModule.forRoot(exports.routes);
// @NgModule({
//     imports: [NativeScriptRouterModule.forRoot(routes)],
//     exports: [NativeScriptRouterModule]
// })
// export class AppRoutingModule { }
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLXJvdXRpbmcubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYXBwLXJvdXRpbmcubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsc0RBQXVFO0FBR3ZFLGdFQUE4RDtBQUM5RCx1RUFBb0U7QUFDcEUsMEVBQXVFO0FBRXZFLCtFQUE2RTtBQUVoRSxRQUFBLE1BQU0sR0FBVztJQUMxQixFQUFFLElBQUksRUFBRSxFQUFFLEVBQUUsVUFBVSxFQUFFLFFBQVEsRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFO0lBQ3JELEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxTQUFTLEVBQUUsZ0NBQWMsRUFBRTtJQUM1QyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFFLG9DQUFnQixFQUFFO0lBQ2hELEVBQUUsSUFBSSxFQUFFLFdBQVcsRUFBQyxXQUFXLEVBQUUsQ0FBQyxxQ0FBZ0IsQ0FBQztRQUMzQyxZQUFZLEVBQUUsaURBQWlELEVBQUM7SUFDeEUsRUFBRSxJQUFJLEVBQUUsUUFBUSxFQUFDLFdBQVcsRUFBRSxDQUFDLHFDQUFnQixDQUFDO1FBQ3ZDLFlBQVksRUFBRSxtREFBbUQsRUFBQztJQUMxRSxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUMsV0FBVyxFQUFFLENBQUMscUNBQWdCLENBQUM7UUFDdkMsWUFBWSxFQUFFLGlEQUFpRCxFQUFDO0lBQzFFLGlGQUFpRjtJQUNoRixFQUFFLElBQUksRUFBRSxLQUFLLEVBQUMsV0FBVyxFQUFFLENBQUMscUNBQWdCLENBQUM7UUFDckMsWUFBWSxFQUFFLHFEQUFxRCxFQUFDO0lBQzVFLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUUsdUNBQWlCLEVBQUMsV0FBVyxFQUFFLENBQUMscUNBQWdCLENBQUMsRUFBRTtDQUVqRixDQUFDO0FBRVcsUUFBQSxPQUFPLEdBQUcsaUNBQXdCLENBQUMsT0FBTyxDQUFDLGNBQU0sQ0FBQyxDQUFDO0FBRWhFLGNBQWM7QUFDZCwyREFBMkQ7QUFDM0QsMENBQTBDO0FBQzFDLEtBQUs7QUFDTCxvQ0FBb0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOYXRpdmVTY3JpcHRSb3V0ZXJNb2R1bGUgfSBmcm9tIFwibmF0aXZlc2NyaXB0LWFuZ3VsYXIvcm91dGVyXCI7XHJcbmltcG9ydCB7IFJvdXRlcyB9IGZyb20gXCJAYW5ndWxhci9yb3V0ZXJcIjtcclxuXHJcbmltcG9ydCB7IExvZ2luQ29tcG9uZW50IH0gZnJvbSBcIi4vYXV0aC9sb2dpbi9sb2dpbi5jb21wb25lbnRcIjtcclxuaW1wb3J0IHsgTWFpblBhZ2VDb21wb25lbnQgfSBmcm9tIFwiLi9tYWluLXBhZ2UvbWFpbi1wYWdlLmNvbXBvbmVudFwiO1xyXG5pbXBvcnQgeyBBdXRoZ3VhcmRTZXJ2aWNlIH0gZnJvbSBcIi4vYXV0aC9hdXRoZ3VhcmQvYXV0aC1ndWFyZC1zZXJ2aWNlXCI7XHJcbmltcG9ydCB7IEl0ZW1NYXN0ZXJDb21wb25lbnQgfSBmcm9tIFwiLi9pdGVtLW1hc3Rlci9pdGVtL2l0ZW0tbWFzdGVyLmNvbXBvbmVudFwiO1xyXG5pbXBvcnQgeyBTZXR0aW5nQ29tcG9uZW50IH0gZnJvbSAnLi9jb3JlL3NldHRpbmdzL3NldHRpbmcvc2V0dGluZy5jb21wb25lbnQnO1xyXG5cclxuZXhwb3J0IGNvbnN0IHJvdXRlczogUm91dGVzID0gW1xyXG4gICAgeyBwYXRoOiBcIlwiLCByZWRpcmVjdFRvOiBcIi9sb2dpblwiLCBwYXRoTWF0Y2g6IFwiZnVsbFwiIH0sXHJcbiAgICB7IHBhdGg6IFwibG9naW5cIiwgY29tcG9uZW50OiBMb2dpbkNvbXBvbmVudCB9LFxyXG4gICAgeyBwYXRoOiBcInNldHRpbmdcIiwgY29tcG9uZW50OiBTZXR0aW5nQ29tcG9uZW50IH0sXHJcbiAgICB7IHBhdGg6IFwic2FsZXNsaXN0XCIsY2FuQWN0aXZhdGU6IFtBdXRoZ3VhcmRTZXJ2aWNlXSxcclxuICAgICAgICAgICAgbG9hZENoaWxkcmVuOiBcIi4vc2FsZXNvcmRlci9zYWxlc29yZGVyLm1vZHVsZSNTYWxlc29yZGVyTW9kdWxlXCJ9LFxyXG4gICAgeyBwYXRoOiBcIm1hc3RlclwiLGNhbkFjdGl2YXRlOiBbQXV0aGd1YXJkU2VydmljZV0sXHJcbiAgICAgICAgICAgICBsb2FkQ2hpbGRyZW46IFwiLi9pdGVtLW1hc3Rlci9pdGVtLW1hc3Rlci5tb2R1bGUjSXRlbU1hc3Rlck1vZHVsZVwifSwgXHJcbiAgICAgeyBwYXRoOiBcImRhaWx5XCIsY2FuQWN0aXZhdGU6IFtBdXRoZ3VhcmRTZXJ2aWNlXSxcclxuICAgICAgICAgICAgIGxvYWRDaGlsZHJlbjogXCIuL3Byb2R1Y3Rpb24vcHJvZHVjdGlvbi5tb2R1bGUjUHJvZHVjdGlvbk1vZHVsZVwifSxcclxuICAgLy97IHBhdGg6IFwiZGFpbHlcIixjYW5BY3RpdmF0ZTogW0F1dGhndWFyZFNlcnZpY2VdLGNvbXBvbmVudDpJdGVtTWFzdGVyQ29tcG9uZW50fSxcclxuICAgIHsgcGF0aDogXCJncm5cIixjYW5BY3RpdmF0ZTogW0F1dGhndWFyZFNlcnZpY2VdLFxyXG4gICAgICAgICAgICBsb2FkQ2hpbGRyZW46IFwiLi9nb29kLXJlY2VpcHQvZ29vZC1yZWNlaXB0Lm1vZHVsZSNHb29kUmVjaXB0TW9kdWxlXCJ9LFxyXG4gICAgeyBwYXRoOiBcIm1haW5cIiwgY29tcG9uZW50OiBNYWluUGFnZUNvbXBvbmVudCxjYW5BY3RpdmF0ZTogW0F1dGhndWFyZFNlcnZpY2VdIH1cclxuICAgICAgICBcclxuXTtcclxuXHJcbmV4cG9ydCBjb25zdCByb3V0aW5nID0gTmF0aXZlU2NyaXB0Um91dGVyTW9kdWxlLmZvclJvb3Qocm91dGVzKTtcclxuXHJcbi8vIEBOZ01vZHVsZSh7XHJcbi8vICAgICBpbXBvcnRzOiBbTmF0aXZlU2NyaXB0Um91dGVyTW9kdWxlLmZvclJvb3Qocm91dGVzKV0sXHJcbi8vICAgICBleHBvcnRzOiBbTmF0aXZlU2NyaXB0Um91dGVyTW9kdWxlXVxyXG4vLyB9KVxyXG4vLyBleHBvcnQgY2xhc3MgQXBwUm91dGluZ01vZHVsZSB7IH0iXX0=
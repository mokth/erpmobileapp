"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var router_1 = require("nativescript-angular/router");
var login_component_1 = require("./auth/login/login.component");
var main_page_component_1 = require("./main-page/main-page.component");
var auth_guard_service_1 = require("./auth/authguard/auth-guard-service");
var daily_output_component_1 = require("./production/daily-output/daily-output.component");
exports.routes = [
    { path: "", redirectTo: "/login", pathMatch: "full" },
    { path: "login", component: login_component_1.LoginComponent },
    { path: "saleslist",
        loadChildren: "./salesorder/salesorder.module#SalesorderModule" },
    // { path: "saleslist", component: SalesOrderListComponent,canActivate: [AuthguardService] },
    // { path: "sales", component: SalesOrderComponent,canActivate: [AuthguardService] },
    // { path: "sales/:sono", component: SalesOrderComponent,canActivate: [AuthguardService] },
    // { path: "lookcust", component: CustomerLookupComponent,canActivate: [AuthguardService] },
    // { path: "lookitem", component: ItemLookupComponent,canActivate: [AuthguardService] },
    { path: "main", component: main_page_component_1.MainPageComponent, canActivate: [auth_guard_service_1.AuthguardService] },
    { path: "daily", component: daily_output_component_1.DailyOutputComponent, canActivate: [auth_guard_service_1.AuthguardService] }
];
exports.routing = router_1.NativeScriptRouterModule.forRoot(exports.routes);
// @NgModule({
//     imports: [NativeScriptRouterModule.forRoot(routes)],
//     exports: [NativeScriptRouterModule]
// })
// export class AppRoutingModule { }
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLXJvdXRpbmcubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYXBwLXJvdXRpbmcubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQ0Esc0RBQXVFO0FBSXZFLGdFQUE4RDtBQUc5RCx1RUFBb0U7QUFHcEUsMEVBQXVFO0FBQ3ZFLDJGQUF3RjtBQUUzRSxRQUFBLE1BQU0sR0FBVztJQUMxQixFQUFFLElBQUksRUFBRSxFQUFFLEVBQUUsVUFBVSxFQUFFLFFBQVEsRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFO0lBQ3JELEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxTQUFTLEVBQUUsZ0NBQWMsRUFBRTtJQUM1QyxFQUFFLElBQUksRUFBRSxXQUFXO1FBQ2pCLFlBQVksRUFBRSxpREFBaUQsRUFBQztJQUNsRSw2RkFBNkY7SUFDN0YscUZBQXFGO0lBQ3JGLDJGQUEyRjtJQUMzRiw0RkFBNEY7SUFDNUYsd0ZBQXdGO0lBQ3ZGLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUUsdUNBQWlCLEVBQUMsV0FBVyxFQUFFLENBQUMscUNBQWdCLENBQUMsRUFBRTtJQUMvRSxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLDZDQUFvQixFQUFDLFdBQVcsRUFBRSxDQUFDLHFDQUFnQixDQUFDLEVBQUU7Q0FFckYsQ0FBQztBQUVXLFFBQUEsT0FBTyxHQUFHLGlDQUF3QixDQUFDLE9BQU8sQ0FBQyxjQUFNLENBQUMsQ0FBQztBQUVoRSxjQUFjO0FBQ2QsMkRBQTJEO0FBQzNELDBDQUEwQztBQUMxQyxLQUFLO0FBQ0wsb0NBQW9DIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xyXG5pbXBvcnQgeyBOYXRpdmVTY3JpcHRSb3V0ZXJNb2R1bGUgfSBmcm9tIFwibmF0aXZlc2NyaXB0LWFuZ3VsYXIvcm91dGVyXCI7XHJcbmltcG9ydCB7IFJvdXRlcyB9IGZyb20gXCJAYW5ndWxhci9yb3V0ZXJcIjtcclxuXHJcblxyXG5pbXBvcnQgeyBMb2dpbkNvbXBvbmVudCB9IGZyb20gXCIuL2F1dGgvbG9naW4vbG9naW4uY29tcG9uZW50XCI7XHJcbmltcG9ydCB7IFNhbGVzT3JkZXJDb21wb25lbnQgfSBmcm9tIFwiLi9zYWxlc29yZGVyL3NhbGVzLW9yZGVyL3NhbGVzLW9yZGVyLmNvbXBvbmVudFwiO1xyXG5pbXBvcnQgeyBDdXN0b21lckxvb2t1cENvbXBvbmVudCB9IGZyb20gXCIuL3NhbGVzb3JkZXIvbG9va3VwL2N1c3RvbWVyLWxvb2t1cC9jdXN0b21lci1sb29rdXAuY29tcG9uZW50XCI7XHJcbmltcG9ydCB7IE1haW5QYWdlQ29tcG9uZW50IH0gZnJvbSBcIi4vbWFpbi1wYWdlL21haW4tcGFnZS5jb21wb25lbnRcIjtcclxuaW1wb3J0IHsgSXRlbUxvb2t1cENvbXBvbmVudCB9IGZyb20gXCIuL3NhbGVzb3JkZXIvbG9va3VwL2l0ZW0tbG9va3VwL2l0ZW0tbG9va3VwLmNvbXBvbmVudFwiO1xyXG5pbXBvcnQgeyBTYWxlc09yZGVyTGlzdENvbXBvbmVudCB9IGZyb20gXCIuL3NhbGVzb3JkZXIvc2FsZXMtb3JkZXItbGlzdC9zYWxlcy1vcmRlci1saXN0LmNvbXBvbmVudFwiO1xyXG5pbXBvcnQgeyBBdXRoZ3VhcmRTZXJ2aWNlIH0gZnJvbSBcIi4vYXV0aC9hdXRoZ3VhcmQvYXV0aC1ndWFyZC1zZXJ2aWNlXCI7XHJcbmltcG9ydCB7IERhaWx5T3V0cHV0Q29tcG9uZW50IH0gZnJvbSBcIi4vcHJvZHVjdGlvbi9kYWlseS1vdXRwdXQvZGFpbHktb3V0cHV0LmNvbXBvbmVudFwiO1xyXG5cclxuZXhwb3J0IGNvbnN0IHJvdXRlczogUm91dGVzID0gW1xyXG4gICAgeyBwYXRoOiBcIlwiLCByZWRpcmVjdFRvOiBcIi9sb2dpblwiLCBwYXRoTWF0Y2g6IFwiZnVsbFwiIH0sXHJcbiAgICB7IHBhdGg6IFwibG9naW5cIiwgY29tcG9uZW50OiBMb2dpbkNvbXBvbmVudCB9LFxyXG4gICAgeyBwYXRoOiBcInNhbGVzbGlzdFwiLFxyXG4gICAgICBsb2FkQ2hpbGRyZW46IFwiLi9zYWxlc29yZGVyL3NhbGVzb3JkZXIubW9kdWxlI1NhbGVzb3JkZXJNb2R1bGVcIn0sXHJcbiAgICAvLyB7IHBhdGg6IFwic2FsZXNsaXN0XCIsIGNvbXBvbmVudDogU2FsZXNPcmRlckxpc3RDb21wb25lbnQsY2FuQWN0aXZhdGU6IFtBdXRoZ3VhcmRTZXJ2aWNlXSB9LFxyXG4gICAgLy8geyBwYXRoOiBcInNhbGVzXCIsIGNvbXBvbmVudDogU2FsZXNPcmRlckNvbXBvbmVudCxjYW5BY3RpdmF0ZTogW0F1dGhndWFyZFNlcnZpY2VdIH0sXHJcbiAgICAvLyB7IHBhdGg6IFwic2FsZXMvOnNvbm9cIiwgY29tcG9uZW50OiBTYWxlc09yZGVyQ29tcG9uZW50LGNhbkFjdGl2YXRlOiBbQXV0aGd1YXJkU2VydmljZV0gfSxcclxuICAgIC8vIHsgcGF0aDogXCJsb29rY3VzdFwiLCBjb21wb25lbnQ6IEN1c3RvbWVyTG9va3VwQ29tcG9uZW50LGNhbkFjdGl2YXRlOiBbQXV0aGd1YXJkU2VydmljZV0gfSxcclxuICAgIC8vIHsgcGF0aDogXCJsb29raXRlbVwiLCBjb21wb25lbnQ6IEl0ZW1Mb29rdXBDb21wb25lbnQsY2FuQWN0aXZhdGU6IFtBdXRoZ3VhcmRTZXJ2aWNlXSB9LFxyXG4gICAgIHsgcGF0aDogXCJtYWluXCIsIGNvbXBvbmVudDogTWFpblBhZ2VDb21wb25lbnQsY2FuQWN0aXZhdGU6IFtBdXRoZ3VhcmRTZXJ2aWNlXSB9LFxyXG4gICAgeyBwYXRoOiBcImRhaWx5XCIsIGNvbXBvbmVudDogRGFpbHlPdXRwdXRDb21wb25lbnQsY2FuQWN0aXZhdGU6IFtBdXRoZ3VhcmRTZXJ2aWNlXSB9XHJcbiAgICAgICAgXHJcbl07XHJcblxyXG5leHBvcnQgY29uc3Qgcm91dGluZyA9IE5hdGl2ZVNjcmlwdFJvdXRlck1vZHVsZS5mb3JSb290KHJvdXRlcyk7XHJcblxyXG4vLyBATmdNb2R1bGUoe1xyXG4vLyAgICAgaW1wb3J0czogW05hdGl2ZVNjcmlwdFJvdXRlck1vZHVsZS5mb3JSb290KHJvdXRlcyldLFxyXG4vLyAgICAgZXhwb3J0czogW05hdGl2ZVNjcmlwdFJvdXRlck1vZHVsZV1cclxuLy8gfSlcclxuLy8gZXhwb3J0IGNsYXNzIEFwcFJvdXRpbmdNb2R1bGUgeyB9Il19